{
  "test_name": "TestVirtualNetworkSecure",
  "status": "FAILED",
  "duration": "94.09s",
  "failure_reason": "Missing Azure credentials",
  "error_details": {
    "primary_error": "building account: unable to configure ResourceManagerAccount: subscription ID could not be determined and was not specified",
    "error_location": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
    "error_source": "main.tf line 14"
  },
  "test_execution_details": {
    "fixture_path": "./fixtures/secure",
    "terraform_operations": [
      {
        "operation": "terraform init",
        "status": "SUCCESS"
      },
      {
        "operation": "terraform apply",
        "status": "FAILED",
        "retry_count": 3,
        "retry_delay": "10s"
      },
      {
        "operation": "terraform destroy",
        "status": "FAILED",
        "retry_count": 3,
        "retry_delay": "10s"
      }
    ]
  },
  "root_cause_analysis": {
    "issue": "Azure authentication credentials not configured",
    "missing_environment_variables": [
      "ARM_SUBSCRIPTION_ID",
      "ARM_TENANT_ID",
      "ARM_CLIENT_ID",
      "ARM_CLIENT_SECRET"
    ],
    "explanation": "The azurerm provider requires authentication credentials to connect to Azure. These are typically provided via environment variables for testing purposes."
  },
  "resolution": {
    "steps": [
      {
        "step": 1,
        "action": "Set up Azure Service Principal",
        "command": "az ad sp create-for-rbac --name terraform-testing --role Contributor --scopes /subscriptions/{subscription-id}"
      },
      {
        "step": 2,
        "action": "Export required environment variables",
        "commands": [
          "export ARM_SUBSCRIPTION_ID=\"your-subscription-id\"",
          "export ARM_TENANT_ID=\"your-tenant-id\"",
          "export ARM_CLIENT_ID=\"your-client-id\"",
          "export ARM_CLIENT_SECRET=\"your-client-secret\""
        ]
      },
      {
        "step": 3,
        "action": "Run the test again",
        "command": "go test -v -run TestVirtualNetworkSecure -timeout 30m"
      }
    ]
  },
  "test_configuration": {
    "test_file": "module_test.go",
    "test_function": "TestVirtualNetworkSecure",
    "test_type": "Integration test",
    "resources_tested": [
      "azurerm_resource_group",
      "azurerm_network_ddos_protection_plan",
      "azurerm_log_analytics_workspace",
      "azurerm_storage_account",
      "azurerm_network_watcher",
      "azurerm_network_security_group",
      "azurerm_virtual_network (module)"
    ],
    "security_features_tested": [
      "DDoS Protection Plan",
      "Network Flow Logs",
      "Traffic Analytics",
      "Diagnostic Settings",
      "Custom DNS servers",
      "Network Security Group"
    ]
  },
  "additional_notes": [
    "The test is designed to validate security-focused Virtual Network configurations",
    "It creates a comprehensive security infrastructure including DDoS protection, flow logs, and monitoring",
    "The test uses Terratest framework with retry logic for resilience",
    "Without proper Azure credentials, the test cannot provision any resources"
  ]
}