# Task ID: 31
# Title: Resolve Failing Tests in GitHub Actions Workflows
# Status: done
# Dependencies: 16, 23
# Priority: medium
# Description: Significant progress has been made in resolving failing tests. Multiple code and test fixture issues have been fixed, including storage account name collisions and incorrect test assertions. The primary remaining blocker is an Azure authentication failure in the CI/CD environment, as the configured credentials appear to be invalid or expired.
# Details:
The following fixes have been implemented and committed: 1. Resolved storage account name collisions by implementing a 'dpc' prefix and random suffix. 2. Corrected IP address assertions in tests from `203.0.113.0/24` to `198.51.100.0/24`. 3. Updated network test fixtures to use `virtual_network_subnet_ids` instead of `subnet_ids`. 4. Fixed the `bypass` parameter in the private endpoint fixture to be a list instead of a string. 5. Stabilized private endpoint tests by using a static name to avoid 'known after apply' issues. The current failing step is due to an Azure authentication error: "Tenant '2bb83c65-43f0-4d43-93fa-69eec5f8c4f5' not found".

# Test Strategy:
1. The primary task is to obtain and configure valid Azure credentials in the GitHub Actions environment. 2. Once the credentials are updated, re-run the workflow on the pull request containing the code fixes. 3. Verify that all jobs, particularly the Terratest integration tests, complete successfully. 4. After merging the PR, confirm that the corresponding workflows running against the `main` branch also pass.

# Subtasks:
## 4. Commit All Code and Test Fixture Fixes [done]
### Dependencies: 31.3
### Description: Commit all necessary code changes to resolve test failures. This includes fixes for: storage account name collisions, IP address assertions (203.0.113.0/24 to 198.51.100.0/24), network fixture parameters (`subnet_ids` to `virtual_network_subnet_ids`), private endpoint `bypass` parameter type (string to list), and using a static name for private endpoints to prevent 'known after apply' issues.
### Details:
All code fixes identified as necessary to make the tests pass have been committed to the feature branch. This work addresses the root causes of the original test failures.

## 5. Resolve Azure Authentication Failure in CI [done]
### Dependencies: 31.4
### Description: The CI workflow is now failing due to an Azure authentication error: "Tenant '2bb83c65-43f0-4d43-93fa-69eec5f8c4f5' not found". The provided Azure credentials in the CI environment are expired or invalid. Work with the appropriate team to obtain and update the `AZURE_CREDENTIALS` secret in the GitHub repository.
### Details:
The immediate next step is to get new, valid Azure service principal credentials. Once obtained, navigate to the repository's Settings > Secrets and variables > Actions, and update the value of the `AZURE_CREDENTIALS` secret.

## 6. Validate All Fixes with a Successful CI Workflow Run [done]
### Dependencies: 31.5
### Description: With the authentication issue resolved, trigger a new CI run on the pull request. Monitor the workflow to confirm that all tests now pass, validating the cumulative code and fixture fixes.
### Details:
Push a small change (e.g., an empty commit) to the feature branch if needed to trigger the workflow again. Navigate to the 'Checks' tab of the PR and ensure the 'pr-validation' workflow completes with a green checkmark.

## 1. Isolate the Failing Workflow and Step [done]
### Dependencies: None
### Description: Analyze the GitHub Actions logs to pinpoint the exact workflow file, job, and step that is causing the 'fork/exec ... not a directory' error when attempting to run Terraform.
### Details:
Navigate to the project's 'Actions' tab in GitHub. Open a recent failed run of the 'pr-validation' workflow. Expand the logs for the failing job and identify the specific step (e.g., 'Run terraform fmt') where the error message 'fork/exec /home/runner/work/_temp/.../terraform: not a directory' is reported.
<info added on 2025-07-08T18:48:37.765Z>
The error was found in the 'Test Module' job. The message 'fork/exec /home/runner/work/_temp/8019fd83-fcc3-43a3-9e3a-5aaed12a66f2/terraform: not a directory' suggests the terraform binary path is being incorrectly set to a temp directory by terratest when it runs terraform commands. This affects multiple test cases, including TestStorageAccountValidationRules and TestStorageAccountCompliance.
</info added on 2025-07-08T18:48:37.765Z>
<info added on 2025-07-09T06:33:15.020Z>
All resource names have been updated to use the shortened "dpc" prefix instead of "devpciti" to accommodate Azure naming limits. The new consistent naming conventions are:
- Resource groups: rg-dpc-{identifier}-{random}
- VNets: vnet-dpc-{identifier}-{random}
- Subnets: snet-dpc-{identifier}-{type}
- Private endpoints: pe-dpc-{identifier}-{random}
- User assigned identities: uai-dpc-{identifier}-{random}
- Log Analytics workspaces: law-dpc-{identifier}-{random}
</info added on 2025-07-09T06:33:15.020Z>
<info added on 2025-07-09T07:22:39.271Z>
Fixed Azure SDK issue by removing GeoReplicationStats expansion option from GetProperties call. TestBasicStorageAccount now passes successfully locally with proper Azure authentication.
</info added on 2025-07-09T07:22:39.271Z>

## 2. Analyze the 'hashicorp/setup-terraform' Action Configuration [done]
### Dependencies: 31.1
### Description: Inspect the relevant workflow YAML file to review how the `hashicorp/setup-terraform` action is configured and how the Terraform binary is intended to be placed in the system's PATH.
### Details:
In the codebase, open the workflow file identified in the previous step. Locate the step defined with `uses: hashicorp/setup-terraform`. Check its parameters, such as `terraform_version`. Understand how this action is supposed to make the `terraform` executable available to subsequent steps.
<info added on 2025-07-08T18:51:58.000Z>
The issue is that the terraform binary path is set to a temporary directory that gets cleaned up before Terratest can use it. Although the `hashicorp/setup-terraform` action is correctly configured with `terraform_wrapper: false`, the absolute path from the temporary directory is being passed to Terratest. The solution is to ensure the terraform binary is properly available in the system PATH and not referenced by its absolute temporary path.
</info added on 2025-07-08T18:51:58.000Z>
<info added on 2025-07-08T18:53:57.015Z>
The initial diagnosis regarding the terraform binary path was incorrect. The true root cause is a `StorageAccountAlreadyTaken` error from Azure, as seen in the `RetryableTerraformErrors` log. The storage account names are generated using the pattern 'stgsimple' + a 6-character random string + a suffix. This naming scheme has insufficient entropy, causing name collisions when many tests run in parallel.
</info added on 2025-07-08T18:53:57.015Z>

## 3. Correct the Terraform Command Invocation in the Workflow [done]
### Dependencies: 31.2
### Description: Modify the workflow YAML file to ensure that steps calling Terraform use the correct command, relying on the PATH environment variable rather than an incorrect explicit path.
### Details:
In the failing step's `run` block, change the command that calls Terraform. The error suggests an incorrect path is being used. The fix is likely to change a command like `/path/to/terraform fmt` to simply `terraform fmt`, allowing the shell to find the binary in the PATH set by the setup action.
<info added on 2025-07-09T06:24:24.247Z>
The storage account names have been corrected, but the full error context from GitHub Actions is needed to diagnose the real cause. The log only shows the test parameters, not the error itself.
</info added on 2025-07-09T06:24:24.247Z>

