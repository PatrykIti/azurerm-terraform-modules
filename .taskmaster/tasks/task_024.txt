# Task ID: 24
# Title: Refactor 'Simple' and 'Complete' Examples
# Status: done
# Dependencies: 23
# Priority: medium
# Description: Update the 'simple' and 'complete' examples to align with best practices, including renaming the 'simple' directory to 'basic', adding variables for configuration, improving security defaults, and ensuring the module's capabilities are used correctly.
# Details:
For the 'simple' example: 1. Rename the directory from `simple` to `basic`. 2. Remove the `shared_access_key_enabled = true` setting or add a prominent comment warning about the security implications. 3. Introduce a `variables.tf` file for `location` and `resource_group_name`. 4. Use the module's `containers` input to create at least one storage container, e.g., `containers = { "logs" = { access_type = "private" } }`. For the 'complete' example: 1. Set `network_rules_default_action = "Deny"` in the module block. 2. Add a `variables.tf` file for `location`, `prefix`, and `network_ranges`.

# Test Strategy:
For each modified example, run `terraform plan` and `terraform apply`. In the Azure Portal, confirm that the 'basic' example's storage account contains the new container. For the 'complete' example, verify that the storage account's networking configuration has its default action set to 'Deny'.

# Subtasks:
## 1. Rename 'simple' example to 'basic' and add variables.tf [done]
### Dependencies: None
### Description: Rename the `examples/simple` directory to `examples/basic`. Create a `variables.tf` file within this new directory to define variables for `location` and `resource_group_name`. Update the `main.tf` to use these new variables and provide an example `terraform.tfvars` file.
### Details:
1. Rename the directory: `git mv examples/simple examples/basic`. 2. Create `examples/basic/variables.tf` with variables for `location` and `resource_group_name`. 3. In `examples/basic/main.tf`, replace the hardcoded values for these attributes with `var.location` and `var.resource_group_name`. 4. Create an `examples/basic/terraform.tfvars.example` file to demonstrate how to populate these variables.

## 2. Improve Security and Add Container Creation to 'basic' Example [done]
### Dependencies: None
### Description: In the `examples/basic/main.tf`, remove the `shared_access_key_enabled = true` setting to default to a more secure configuration. Also, demonstrate the module's capability by using the `containers` input to create a private 'logs' container.
### Details:
1. Edit `examples/basic/main.tf`. 2. Remove the line `shared_access_key_enabled = true` from the module block. If it doesn't exist, ensure it's not added. 3. Add the input `containers = { "logs" = { access_type = "private" } }` to the module block to demonstrate container creation.

## 3. Add variables.tf for the 'complete' Example [done]
### Dependencies: None
### Description: Create a `variables.tf` file in the `examples/complete` directory. Define variables for `location`, `prefix`, and `network_ranges` to make the example more configurable. Update the `main.tf` to use these new variables and provide an example `terraform.tfvars` file.
### Details:
1. Create `examples/complete/variables.tf`. 2. Define variables: `variable "location" {}`, `variable "prefix" {}`, and `variable "network_ranges" { type = list(string) }`. 3. In `examples/complete/main.tf`, replace the corresponding hardcoded values with `var.location`, `var.prefix`, and `var.network_ranges`. 4. Create an `examples/complete/terraform.tfvars.example` file to demonstrate usage.

## 4. Harden Network Security in 'complete' Example [done]
### Dependencies: None
### Description: Update the `examples/complete/main.tf` to set a more secure default network rule by changing the `network_rules_default_action` to "Deny". This ensures that traffic is denied by default unless explicitly allowed.
### Details:
1. Edit `examples/complete/main.tf`. 2. In the module block for the storage account, add or update the parameter to be `network_rules_default_action = "Deny"`.

