# Task ID: 5
# Title: Terratest Framework and Helper Setup
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Set up the Go environment and Terratest framework for end-to-end testing of modules. This includes creating a test directory, setting up helper functions for Azure authentication, and establishing a basic test case structure.
# Details:
Create a `test/` directory at the root. Inside, initialize a Go module (`go mod init <repo_url>/test`). Add Terratest as a dependency: `go get github.com/gruntwork-io/terratest/modules/terraform`. Create a `helpers.go` file for common functions, such as authenticating to Azure using environment variables for a service principal, which will be provided as secrets in GitHub Actions.

# Test Strategy:
Create a simple placeholder test file (`root_test.go`) that initializes Go modules and can be executed with `go test`. The test should pass, confirming the Go environment is correctly configured.

# Subtasks:
## 1. Integrate semantic-release for automated CHANGELOG management [done]
### Dependencies: None
### Description: Replace manual CHANGELOG updates in module-release workflow with semantic-release integration for fully automated versioning and changelog generation
### Details:
Implement semantic-release integration in the module-release.yml workflow to automate:
1. Version determination based on conventional commits
2. CHANGELOG generation following Keep a Changelog format
3. Git tagging with module-specific prefixes (e.g., SAv1.2.3)
4. GitHub release creation
5. Automatic commit of updated files

Key tasks:
- Modify module-release.yml to use semantic-release instead of manual updates
- Create shared .releaserc.js template for all modules
- Ensure monorepo compatibility (each module releases independently)
- Configure semantic-release to only analyze commits for specific module paths
- Update documentation in WORKFLOWS.md and CLAUDE.md

