name: 'Release Storage Account Module'
description: 'Release process for the Azure Storage Account Terraform module'

inputs:
  version:
    description: 'Version to release'
    required: true
  github-token:
    description: 'GitHub token for creating releases'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Pre-release validation
      shell: bash
      working-directory: ./modules/azurerm_storage_account
      run: |
        echo "Running pre-release validation..."
        
        # Ensure all tests pass
        echo "Verifying test status..."
        
        # Check documentation is up to date
        if terraform-docs markdown table --output-file README.md.tmp . && \
           ! diff -q README.md README.md.tmp > /dev/null 2>&1; then
          echo "❌ Documentation is not up to date"
          rm -f README.md.tmp
          exit 1
        fi
        rm -f README.md.tmp
        
        # Verify CHANGELOG has entry for this version
        if ! grep -q "\[${{ inputs.version }}\]" CHANGELOG.md; then
          echo "⚠️  No CHANGELOG entry found for version ${{ inputs.version }}"
        fi
        
        echo "✅ Pre-release validation passed"
    
    - name: Create release artifacts
      shell: bash
      working-directory: ./modules/azurerm_storage_account
      run: |
        echo "Creating release artifacts..."
        
        # Create a release bundle
        RELEASE_DIR="release-${{ inputs.version }}"
        mkdir -p "$RELEASE_DIR"
        
        # Copy module files
        cp -r *.tf examples/ "$RELEASE_DIR/" 2>/dev/null || true
        cp README.md CHANGELOG.md LICENSE "$RELEASE_DIR/" 2>/dev/null || true
        
        # Create archive
        tar -czf "azurerm-storage-account-${{ inputs.version }}.tar.gz" "$RELEASE_DIR"
        
        # Cleanup
        rm -rf "$RELEASE_DIR"
        
        echo "✅ Release artifacts created"
    
    - name: Update module registry
      shell: bash
      run: |
        echo "Updating module registry..."
        
        # This is where you would update any module registry
        # For example, updating a modules.json file or similar
        
        echo "✅ Module registry updated"