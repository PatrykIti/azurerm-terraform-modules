name: Module Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'modules/*/**.tf'
      - 'modules/*/variables.tf'
      - 'modules/*/outputs.tf'
      - 'modules/*/README.md'
  workflow_dispatch:
    inputs:
      module:
        description: 'Specific module to update docs for (leave empty for all)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.detect.outputs.modules }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Detect modules to update
        id: detect
        run: |
          if [[ -n "${{ inputs.module }}" ]]; then
            # Specific module requested
            MODULES='["${{ inputs.module }}"]'
          else
            # Detect all modules that need doc updates
            MODULES=$(find modules -name "main.tf" -type f | \
                      sed 's|/main.tf||' | \
                      sed 's|modules/||' | \
                      sort | \
                      jq -R -s -c 'split("\n")[:-1]')
          fi
          
          echo "modules=$MODULES" >> $GITHUB_OUTPUT
      
      - id: set-matrix
        run: |
          MODULES='${{ steps.detect.outputs.modules }}'
          echo "matrix={\"module\":${MODULES}}" >> $GITHUB_OUTPUT

  update-docs:
    needs: detect-modules
    if: ${{ needs.detect-modules.outputs.modules != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-modules.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          ref: ${{ github.head_ref }}
      
      - name: Setup tools
        uses: ./.github/actions/terraform-setup
        with:
          install-terraform-docs: true
      
      - name: Generate documentation for ${{ matrix.module }}
        id: docs
        run: |
          MODULE_PATH="modules/${{ matrix.module }}"
          
          # Check if module exists
          if [[ ! -d "$MODULE_PATH" ]]; then
            echo "Module ${{ matrix.module }} not found"
            exit 0
          fi
          
          # Generate README
          echo "Generating documentation for ${{ matrix.module }}..."
          terraform-docs markdown table \
            --output-file README.md \
            --output-mode inject \
            --show requirements,providers,modules,resources,inputs,outputs \
            "$MODULE_PATH"
          
          # Check if docs were updated
          if git diff --quiet "$MODULE_PATH/README.md"; then
            echo "No documentation changes for ${{ matrix.module }}"
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "Documentation updated for ${{ matrix.module }}"
            echo "updated=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Pull Request
        if: steps.docs.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT }}
          commit-message: "docs(${{ matrix.module }}): update terraform documentation"
          title: "docs(${{ matrix.module }}): update terraform documentation"
          body: |
            ## ðŸ“š Documentation Update
            
            This PR updates the Terraform documentation for the `${{ matrix.module }}` module.
            
            ### Changes
            - Updated README.md with latest module configuration
            - Synchronized inputs, outputs, and requirements
            
            ### Generated by
            - terraform-docs v0.20.0
            - GitHub Actions workflow: module-docs.yml
            
            ---
            *This is an automated PR created by the documentation workflow.*
          branch: docs/update-${{ matrix.module }}-${{ github.run_number }}
          delete-branch: true
          labels: |
            documentation
            automated
            module:${{ matrix.module }}

  summary:
    name: Documentation Summary
    runs-on: ubuntu-latest
    needs: update-docs
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## ðŸ“š Documentation Update Summary"
          echo ""
          echo "Documentation workflow completed for modules."
          echo "Any modules with outdated documentation have had PRs created automatically."