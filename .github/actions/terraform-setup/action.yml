name: 'Setup Terraform'
description: 'Setup Terraform with caching and common configuration'

inputs:
  terraform-version:
    description: 'Terraform version to use'
    required: false
    default: '1.12.2'
  install-tflint:
    description: 'Whether to install TFLint'
    required: false
    default: 'false'
  install-terraform-docs:
    description: 'Whether to install terraform-docs'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform-version }}
        terraform_wrapper: false

    - name: Cache Terraform plugins
      uses: actions/cache@v4
      with:
        path: |
          ~/.terraform.d/plugin-cache
          **/.terraform/providers
        key: terraform-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}
        restore-keys: |
          terraform-${{ runner.os }}-

    - name: Setup TFLint
      if: inputs.install-tflint == 'true'
      uses: terraform-linters/setup-tflint@v5
      with:
        tflint_version: latest

    - name: Setup terraform-docs
      if: inputs.install-terraform-docs == 'true'
      shell: bash
      run: |
        # Use consistent version across all workflows
        TERRAFORM_DOCS_VERSION="v0.20.0"

        # Download with retry logic
        for i in {1..3}; do
          echo "Attempt $i: Downloading terraform-docs..."
          if curl -sSLf --retry 3 --retry-delay 2 -o ./terraform-docs.tar.gz \
            "https://github.com/terraform-docs/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64.tar.gz"; then
            echo "Download successful"
            break
          else
            echo "Download failed, attempt $i/3"
            if [ $i -eq 3 ]; then
              echo "All download attempts failed"
              exit 1
            fi
            sleep 5
          fi
        done

        tar -xzf terraform-docs.tar.gz
        chmod +x terraform-docs
        sudo mv terraform-docs /usr/local/bin/
        rm -f terraform-docs.tar.gz
        terraform-docs --version